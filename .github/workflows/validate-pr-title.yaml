name: validate-pr-title
on:
  pull_request:
    types: [opened, synchronize, edited, reopened]
    branches: 
      - master
  pull_request_target:
    types: [opened, synchronize, edited, reopened]
    branches: 
      - master

jobs:
  title-check:
    runs-on: ubuntu-latest
    env:
      ERROR_MSG: "The PR title does not match the required format: <fix|build|update|feat|ci>(<tag>): <title>"
    steps:
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install shyaml
      run: |
        pip install shyaml
    - name: Print PR Title
      run: echo "${{ github.event.pull_request.title }}"
    - name: Print current directory
      run: ls
    - name: Check PR Title
      run: |
        tags=$(cat ../pr-title-tags.yaml | shyaml get-values-0)
        regex="^($tags)\([a-z]+\): [a-z]"
        echo "${{ github.event.pull_request.title }}" | grep -Pq "$regex" || (echo "$ERROR_MSG" && exit 1)
  labels-check:
    runs-on: ubuntu-latest
    steps:
    - name: Get username
      run: echo "USERNAME=${{ github.event.pull_request.user.login }}" >> $GITHUB_ENV
    - name: Check user username
      run: |
        username_list=("freitasmillena" "cxMiguelSilva" "cx-henriqueAlvelos" "pereiramarco011" "kaplanlior" "dependabot" "gabriel-cx" "joaoReigota1" "asofsilva")
        if printf '%s\n' "${username_list[@]}" | grep -q -P "^$USERNAME$"; then
          echo "Contributor belongs to Checkmarx organization"
          is_member="true"
        else
          echo "Contributor does not belong to Checkmarx organization"
          is_member="false"
        fi
        echo "IS_MEMBER=$is_member" >> $GITHUB_ENV
    - name: Add community label if user does not belong to Checkmarx Organization
      run: |
        if [[ "$IS_MEMBER" == "false" ]]; then
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -X POST -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels -d '{"labels": ["community"]}'
        fi
    - name: Add feature or feature request label
      run: |
        title="${{ github.event.pull_request.title }}"
        if [[ "$title" == feat* ]]; then
          if [[ "$IS_MEMBER" == "true" ]]; then
            echo "Adding 'feature' label..."
            curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -X POST -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels -d '{"labels": ["feature"]}'
          else
            echo "Adding 'feature request' label..."
            curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -X POST -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels -d '{"labels": ["feature request"]}'
          fi
        fi
    - name: Add bug label
      run: |
        title="${{ github.event.pull_request.title }}"
        if [[ "$title" == bug* ]]; then
          echo "Adding 'bug' label..."
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -X POST -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels -d '{"labels": ["bug"]}'
        fi
    - name: Check title for keywords of platforms and cloud providers to add labels
      run: |
        title="${{ github.event.pull_request.title }}"
        declare -A keywords=(["docker"]="docker" ["dkr"]="docker" ["dockerfile"]="dockerfile" ["ansible"]="ansible" ["aws"]="aws" ["gRPC"]="gRPC" ["gcp"]="gcp" ["cloudformation"]="cloudformation" ["cfn"]="cloudformation" ["azure"]="azure" ["arm"]="arm" ["alicloud"]="alicloud" ["tf"]="terraform" ["terraform"]="terraform" ["openapi"]="openapi" ["kubernetes"]="kubernetes" ["k8s"]="kubernetes")
        for keyword in "${!keywords[@]}"; do
          if echo "$title" | grep -iq "\\b$keyword\\b"; then
            label=${keywords[$keyword]}
            echo "Adding '$label' label..."
            curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -X POST -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels -d "{\"labels\": [\"$label\"]}"
          fi
        done
